{"version":3,"file":"static/js/45.08753e7c.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","components/ContactsBook/ContactsBook.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactsPage/ContactsPage.styled.js","components/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      {title && <h2>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import { useState } from 'react';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/contactsApi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Oval } from 'react-loader-spinner';\nimport { Label, Input, Submit } from './ContactsBook.styled';\n\nexport default function Phonebook() {\n  const { data } = useGetContactsQuery();\n  const [createContact, { isLoading }] = useAddContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (\n      data?.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n    ) {\n      Notify.failure(`${name} is already in contacts`);\n      return;\n    } else if (data?.find(contact => contact.number === number)) {\n      Notify.failure(\n        `this number: ${number} is in, you dont want to add one more time.`\n      );\n      return;\n    } else {\n      const contact = {\n        name: name,\n        number: number,\n      };\n      createContact(contact);\n      Notify.success(`${name} has added to contacts successfully`);\n      reset();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label htmlFor=\"nameInputId\">\n        Name\n        <Input\n          value={name}\n          onChange={e => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id=\"nameInputId\"\n        />\n      </Label>\n      <Label htmlFor=\"numberInputId\">\n        Number\n        <Input\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n          id=\"numberInputId\"\n          placeholder=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Submit type=\"submit\" disabled={isLoading}>\n        {isLoading ? (\n          <Oval\n            ariaLabel=\"loading-indicator\"\n            height={16}\n            width={48}\n            strokeWidth={10}\n            strokeWidthSecondary={10}\n            color=\"orange\"\n            secondaryColor=\"yellow\"\n          />\n        ) : (\n          'Add contact'\n        )}\n      </Submit>\n    </form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 10;\n`;\n\nexport const Box = styled.div`\n  padding: 40px;\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  background-color: #a7a55b;\n`;\nexport const ButtonClose = styled.button`\n  display: block;\n  margin: 24px auto 0;\n  padding: 4px 8px;\n  border-radius: 10px;\n  cursor: pointer;\n  background-color: #000000a6;\n  font-size: 14px;\n  color: #fff;\n  :hover,\n  :focus {\n    outline: 2px solid #fff;\n  }\n`;\n","import { createPortal } from 'react-dom';\nimport { Overlay, Box, ButtonClose } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  return createPortal(\n    <Overlay>\n      <Box>\n        <div>{children}</div>\n        <ButtonClose type=\"button\" onClick={onClose}>\n          Cancel\n        </ButtonClose>\n      </Box>\n    </Overlay>,\n    modalRoot\n  );\n};\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  color: #f8e3e0;\n`;\nexport const Input = styled.input`\n  margin-left: 24px;\n  margin-right: auto;\n  margin-bottom: 24px;\n  padding: 3px;\n  border: 2px solid transparent;\n  border-radius: 12px;\n  caret-color: green;\n  :hover,\n  :focus {\n    border: 2px solid #91b291;\n    outline: 1px solid green;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: auto;\n  padding: 4px;\n  border-radius: 10px;\n  cursor: pointer;\n  background-color: #000000a6;\n  font-size: 14px;\n  color: #fff;\n  :hover,\n  :focus {\n    outline: 2px solid #fff;\n  }\n`;\nexport const Item = styled.li`\n  display: flex;\n  margin: 12px;\n  border-bottom: 1px dashed #000000a6;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Oval } from 'react-loader-spinner';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n  useGetContactsQuery,\n} from 'redux/contactsApi';\nimport Modal from 'components/Modal';\nimport { Form, Button, Item, Label, Input } from './ContactItem.styled';\n\nfunction ContactItem({ name, number, id }) {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  const [updateContact, stat] = useUpdateContactMutation();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [newNumber, setNewNumber] = useState(number);\n  const { data } = useGetContactsQuery();\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      if (\n        data?.find(\n          contact => contact.name.toLowerCase() === newName.toLowerCase()\n        )\n      ) {\n        Notify.failure(`${newName} is already in contacts`);\n        return;\n      }\n\n      const contact = {\n        name: newName,\n        number: newNumber,\n      };\n      await updateContact({ contact, id });\n\n      if (!stat.isSuccess) {\n        Notify.success(`contact ${name} has changed successfully`);\n        closeModal();\n      }\n    } catch (error) {\n      console.log(stat.error);\n    }\n  };\n\n  return (\n    <Item>\n      {name}: {number}\n      <Button type=\"button\" onClick={openModal}>\n        Update\n      </Button>\n      <Button\n        type=\"button\"\n        disabled={isLoading}\n        onClick={() => deleteContact(id)}\n      >\n        {isLoading ? (\n          <Oval\n            ariaLabel=\"loading-indicator\"\n            height={10}\n            width={16}\n            strokeWidth={10}\n            strokeWidthSecondary={10}\n            color=\"orange\"\n            secondaryColor=\"yellow\"\n          />\n        ) : (\n          'Delete'\n        )}\n      </Button>\n      {isModalOpen && (\n        <Modal onClose={closeModal}>\n          <Form onSubmit={handleSubmit}>\n            <Label htmlFor=\"name\">\n              Name\n              <Input\n                value={newName}\n                onChange={e => setNewName(e.target.value)}\n                type=\"text\"\n                name=\"name\"\n                placeholder={name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                id=\"name\"\n              />\n            </Label>\n            <Label htmlFor=\"number\">\n              Number\n              <Input\n                value={newNumber}\n                onChange={e => setNewNumber(e.target.value)}\n                id=\"number\"\n                placeholder={number}\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n              />\n            </Label>\n            <Button type=\"submit\" disabled={isLoading}>\n              {stat.isLoading ? (\n                <Oval\n                  ariaLabel=\"loading-indicator\"\n                  height={16}\n                  width={48}\n                  strokeWidth={10}\n                  strokeWidthSecondary={10}\n                  color=\"orange\"\n                  secondaryColor=\"yellow\"\n                />\n              ) : (\n                'Change contact'\n              )}\n            </Button>\n          </Form>\n        </Modal>\n      )}\n    </Item>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { useMemo } from 'react';\nimport ContactItem from '../ContactItem';\n\nconst ContactsList = ({ data }) => {\n  const sortedContactsByName = useMemo(() => {\n    const sortedContacts = data.slice();\n    sortedContacts.sort((a, b) => a.name.localeCompare(b.name));\n    return sortedContacts;\n  }, [data]);\n\n  return (\n    <ul>\n      {sortedContactsByName.map(contact => {\n        return (\n          <ContactItem\n            name={contact.name}\n            number={contact.number}\n            id={contact.id}\n            key={contact.id}\n          ></ContactItem>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  color: #f8e3e0;\n  margin-right: 24px;\n`;\nexport const Input = styled.input`\n  margin-right: 24px;\n  margin-bottom: 24px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled';\nimport { changeFilter, getFiltred } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const val = useSelector(getFiltred);\n\n  const onChange = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n  return (\n    <div>\n      <Label htmlFor=\"filterId\">\n        <Input\n          name=\"filter\"\n          value={val}\n          onChange={onChange}\n          id=\"filterId\"\n          type=\"text\"\n        />\n        Find contacts by name\n      </Label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContactsP = styled.div`\n  padding: 36px;\n  background-color: #6c696c7a;\n`;\n","import { useSelector } from 'react-redux';\nimport Section from '../Section';\nimport { useGetContactsQuery } from 'redux/contactsApi';\nimport Phonebook from '../ContactsBook';\nimport ContactsList from 'components/ContactsList';\nimport Filter from '../Filter';\nimport { getFiltred } from 'redux/filterSlice';\nimport { ContactsP } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const { data } = useGetContactsQuery();\n  const value = useSelector(getFiltred);\n\n  const getFiltredContacts = () => {\n    if (value === '') {\n      return data;\n    } else {\n      const normalizedFilter = value.toLowerCase().trim();\n      return data.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  return (\n    <ContactsP>\n      <Section title=\"Phonebook\">\n        <Phonebook />\n      </Section>\n      {data?.length > 0 && (\n        <Section title=\"Contacts\">\n          <Filter />\n          {data.length > 0 ? (\n            <ContactsList data={getFiltredContacts()} />\n          ) : (\n            <p>No any contact</p>\n          )}\n        </Section>\n      )}\n    </ContactsP>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["title","children","Phonebook","data","useGetContactsQuery","useAddContactMutation","createContact","isLoading","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","find","contact","toLowerCase","Notify","htmlFor","value","onChange","target","type","placeholder","pattern","required","id","disabled","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","Overlay","styled","Box","ButtonClose","modalRoot","document","querySelector","onClose","createPortal","onClick","Label","Input","Button","Item","Form","useDeleteContactMutation","deleteContact","useUpdateContactMutation","updateContact","stat","isModalOpen","setIsModalOpen","newName","setNewName","newNumber","setNewNumber","closeModal","handleSubmit","isSuccess","console","log","error","sortedContactsByName","useMemo","sortedContacts","slice","sort","a","b","localeCompare","map","dispatch","useDispatch","val","useSelector","getFiltred","changeFilter","currentTarget","ContactsP","length","normalizedFilter","trim","filter","includes","getFiltredContacts"],"sourceRoot":""}